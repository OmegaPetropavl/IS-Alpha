# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'objectspravochnik.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QPushButton
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QTableWidgetItem
import images
import MySQLdb as mdb
from AddObject import *
#Окно для добавления и редактирования объектов не забыть

class Ui_objects(object):
    def setupUi(self, objects):
        objects.setObjectName("objects")
        objects.setFixedSize(901, 609)
        icon = QIcon((":/logocompany.png"))
        objects.setWindowIcon(icon)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(objects.sizePolicy().hasHeightForWidth())
        objects.setSizePolicy(sizePolicy)
        self.background = QtWidgets.QFrame(objects)
        self.background.setEnabled(True)
        self.background.setGeometry(QtCore.QRect(-1, -1, 921, 611))
        self.background.setAutoFillBackground(False)
        self.background.setStyleSheet("#background {\n"
"background-color: rgb(170, 170, 200)\n"
"}")
        self.background.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.background.setFrameShadow(QtWidgets.QFrame.Raised)
        self.background.setObjectName("background")
        self.tableobjects = QtWidgets.QTableWidget(self.background)
        self.tableobjects.setGeometry(QtCore.QRect(60, 110, 791, 321))
        self.tableobjects.setRowCount(0)
        self.tableobjects.setObjectName("tabledogovors")
        self.tableobjects.setColumnCount(8)
        
        item = QtWidgets.QTableWidgetItem()
        self.tableobjects.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableobjects.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableobjects.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableobjects.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableobjects.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableobjects.setHorizontalHeaderItem(5, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableobjects.setHorizontalHeaderItem(6, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableobjects.setHorizontalHeaderItem(7, item)
        self.tableobjects.horizontalHeader().setDefaultSectionSize(151)
        self.label = QtWidgets.QLabel(self.background)
        self.label.setGeometry(QtCore.QRect(400, 40, 121, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(22)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.deletebutton = QtWidgets.QPushButton(self.background)
        self.deletebutton.setGeometry(QtCore.QRect(690, 490, 91, 41))
        self.deletebutton.setObjectName("deletebutton")
        self.deletebutton.clicked.connect(lambda: self.delete_row())
        self.addbutton = QtWidgets.QPushButton(self.background)
        self.addbutton.setGeometry(QtCore.QRect(320, 490, 91, 41))
        self.addbutton.setObjectName("addbutton")
        self.addbutton.clicked.connect(lambda: self.openAddObject())
        self.updatebutton = QtWidgets.QPushButton(self.background)
        self.updatebutton.setGeometry(QtCore.QRect(120, 490, 101, 41))
        self.updatebutton.setObjectName("updatebutton")
        self.updatebutton.clicked.connect(lambda: self.updateobjectrows())
        self.editbutton = QtWidgets.QPushButton(self.background)
        self.editbutton.setGeometry(QtCore.QRect(510, 490, 91, 41))
        self.editbutton.setObjectName("editbutton")
        self.tableobjects.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.tableobjects.setSelectionMode(QtWidgets.QAbstractItemView.NoSelection)

        for column in range(self.tableobjects.columnCount()):
            for row in range(self.tableobjects.rowCount()):
                item = QtWidgets.QTableWidgetItem()
                item.setFlags(item.flags() & ~QtCore.Qt.ItemIsEditable)  # Удаление флага ItemIsEditable
                self.tableobjects.setItem(row, column, item)

        header_labels = ["Column 1", "Column 2", "Column 3", "Column 4", "Column 5", "Column 6", "Column 7", "Column 8"]
        self.tableobjects.setHorizontalHeaderLabels(header_labels)
        self.retranslateUi(objects)
        QtCore.QMetaObject.connectSlotsByName(objects)


    def updateobjectrows(self): #Добавление в таблицу значений из БД, построчно и по колонкам
        try:
            db = mdb.connect('localhost', 'root', 'root', 'arenda')
            mycursor = db.cursor()
            query = "SELECT * from objecty"
            mycursor.execute(query)
            result = mycursor.fetchall()
            result = list(result)
            self.tableobjects.setRowCount(len(result))
        
        # Заполнение таблицы данными из списка result
            for i, row in enumerate(result):
                for j, value in enumerate(row):
                    item = QtWidgets.QTableWidgetItem(str(value))
                    self.tableobjects.setItem(i, j, item)
    
        
        except mdb.Error as e:
                error = QMessageBox()
                error.setText('Подключение невозможно!')
                error.exec_()



    def delete_row(self): #Удаление выделенной строчки из таблицы и БД
        selected_row = self.tableobjects.currentRow()
        if selected_row >= 0:
            id_pomesh = self.tableobjects.item(selected_row, 0).text()  # Получение значения "названия помещения"
            reply = QMessageBox.question(self.background, 'Подтверждение удаления', 'Вы действительно хотите удалить помещение?',
                             QMessageBox.Yes | QMessageBox.No, QMessageBox.No)

            if reply == QMessageBox.Yes:
                self.tableobjects.removeRow(selected_row)
                try:
                    db = mdb.connect('localhost', 'root', 'root', 'arenda')
                    mycursor = db.cursor()
                    query = "DELETE FROM  `objecty` WHERE Name = '"+ id_pomesh + "'"
                    mycursor.execute(query)
                    db.commit()
                    error = QMessageBox()
                    error.setWindowTitle('Успех')
                    error.setText('Помещение успешно удалено!')
                    error.buttons = QMessageBox.Ok
                    error.exec_()
                except mdb.Error as e:
                    print (e)
                    error = QMessageBox()
                    error.setText('Переделывай, данные не внесены!')
                    error.exec_()
            else:
                return
        
        else:
            QMessageBox.warning(self.background, 'Предупреждение', 'Пожалуйста, выберите строку для удаления.')


    def openAddObject(self):
        self.AddObject_window = QtWidgets.QMainWindow()
        self.AddObject_ui = Ui_AddObject()
        self.AddObject_ui.setupUi(self.AddObject_window)
        self.AddObject_window.show()



    def retranslateUi(self, objects):
        _translate = QtCore.QCoreApplication.translate
        objects.setWindowTitle(_translate("objects", "Справочник помещений"))
        item = self.tableobjects.horizontalHeaderItem(0)
        item.setText(_translate("objects", "Название"))
        item = self.tableobjects.horizontalHeaderItem(1)
        item.setText(_translate("objects", "Адрес"))
        item = self.tableobjects.horizontalHeaderItem(2)
        item.setText(_translate("objects", "Площадь помещения"))
        item = self.tableobjects.horizontalHeaderItem(3)
        item.setText(_translate("objects", "Подвал"))
        item = self.tableobjects.horizontalHeaderItem(4)
        item.setText(_translate("objects", "Площадь подвала"))
        item = self.tableobjects.horizontalHeaderItem(5)
        item.setText(_translate("objects", "Коэффициент подвала"))
        item = self.tableobjects.horizontalHeaderItem(6)
        item.setText(_translate("objects", "Коэф. тех-обустройства "))
        item = self.tableobjects.horizontalHeaderItem(7)
        item.setText(_translate("objects", "Арендная плата"))
        self.label.setText(_translate("objects", "Объекты"))
        self.deletebutton.setText(_translate("objects", "Удалить"))
        self.addbutton.setText(_translate("objects", "Добавить"))
        self.updatebutton.setText(_translate("objects", "Обновить"))
        self.editbutton.setText(_translate("objects", "Редактировать"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    objects = QtWidgets.QDialog()
    ui = Ui_objects()
    ui.setupUi(objects)
    objects.show()
    sys.exit(app.exec_())
