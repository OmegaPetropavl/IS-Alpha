# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'userspravochnik.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox, QPushButton
from PyQt5.QtGui import QIcon
from PyQt5.QtWidgets import QTableWidgetItem
import images
import MySQLdb as mdb
from NewUser import *
from EditUser import *

class Ui_users(object):
    def setupUi(self, users):
        users.setObjectName("users")
        users.setFixedSize(901, 609)
        icon = QIcon((":/logocompany.png"))
        users.setWindowIcon(icon)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(users.sizePolicy().hasHeightForWidth())
        users.setSizePolicy(sizePolicy)
        self.background = QtWidgets.QFrame(users)
        self.background.setEnabled(True)
        self.background.setGeometry(QtCore.QRect(-1, -1, 921, 611))
        self.background.setAutoFillBackground(False)
        self.background.setStyleSheet("#background {\n"
"background-color: rgb(100, 100, 120)\n"
"}")
        self.background.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.background.setFrameShadow(QtWidgets.QFrame.Raised)
        self.background.setObjectName("background")
        self.tableusers = QtWidgets.QTableWidget(self.background)
        self.tableusers.setGeometry(QtCore.QRect(60, 110, 791, 321))
        self.tableusers.setRowCount(0)
        self.tableusers.setObjectName("tableusers")
        self.tableusers.setColumnCount(6)
        item = QtWidgets.QTableWidgetItem()
        self.tableusers.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableusers.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableusers.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableusers.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableusers.setHorizontalHeaderItem(4, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableusers.setHorizontalHeaderItem(5, item)
        self.tableusers.horizontalHeader().setDefaultSectionSize(131)
        self.tableusers.horizontalHeader().setMinimumSectionSize(40)
        self.label = QtWidgets.QLabel(self.background)
        self.label.setGeometry(QtCore.QRect(310, 50, 281, 51))
        font = QtGui.QFont()
        font.setFamily("Times New Roman")
        font.setPointSize(22)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.deletebutton = QtWidgets.QPushButton(self.background)
        self.deletebutton.setGeometry(QtCore.QRect(690, 490, 91, 41))
        self.deletebutton.setObjectName("deletebutton")
        self.deletebutton.clicked.connect(lambda: self.delete_row1())
        self.addbutton = QtWidgets.QPushButton(self.background)
        self.addbutton.setGeometry(QtCore.QRect(320, 490, 91, 41))
        self.addbutton.setObjectName("addbutton")
        self.addbutton.clicked.connect(lambda: self.openAddUser())
        self.updatebutton = QtWidgets.QPushButton(self.background)
        self.updatebutton.setGeometry(QtCore.QRect(120, 490, 101, 41))
        self.updatebutton.setObjectName("updatebutton")
        self.updatebutton.clicked.connect(lambda: self.updateuserrows())
        self.editbutton = QtWidgets.QPushButton(self.background)
        self.editbutton.setGeometry(QtCore.QRect(510, 490, 91, 41))
        self.editbutton.setObjectName("editbutton")
        self.editbutton.clicked.connect(lambda: self.openEditUser())
        self.retranslateUi(users)
        QtCore.QMetaObject.connectSlotsByName(users)


    def updateuserrows(self): #Добавление в таблицу значений из БД, построчно и по колонкам
        try:
            db = mdb.connect('localhost', 'root', 'root', 'arenda')
            mycursor = db.cursor()
            query = "SELECT * from login"
            mycursor.execute(query)
            result = mycursor.fetchall()
            result = list(result)
            self.tableusers.setRowCount(len(result))
        
        # Заполнение таблицы данными из списка result
            for i, row in enumerate(result):
                for j, value in enumerate(row):
                    item = QtWidgets.QTableWidgetItem(str(value))
                    self.tableusers.setItem(i, j, item)
    
        
        except mdb.Error as e:
                error = QMessageBox()
                error.setText('Подключение невозможно!')
                error.exec_()



    def delete_row1(self): #Удаление выделенной строчки из таблицы и БД
        selected_row = self.tableusers.currentRow()
        if selected_row >= 0:
            iduser = self.tableusers.item(selected_row, 0).text()  # Получение значения "айди пользователя"
            reply = QMessageBox.question(self.background, 'Подтверждение удаления', 'Вы действительно хотите удалить пользователя?',
                             QMessageBox.Yes | QMessageBox.No, QMessageBox.No)

            if reply == QMessageBox.Yes:
                self.tableusers.removeRow(selected_row)
                try:
                    db = mdb.connect('localhost', 'root', 'root', 'arenda')
                    mycursor = db.cursor()
                    query = "DELETE FROM  `login` WHERE ID = '"+ iduser + "'"
                    mycursor.execute(query)
                    db.commit()
                    error = QMessageBox()
                    error.setWindowTitle('Успех')
                    error.setText('Пользователь удален!')
                    error.buttons = QMessageBox.Ok
                    error.exec_()
                except mdb.Error as e:
                    print (e)
                    error = QMessageBox()
                    error.setText('Переделывай, данные не внесены!')
                    error.exec_()
            else:
                return
        
        else:
            QMessageBox.warning(self.background, 'Предупреждение', 'Пожалуйста, выберите строку для удаления.')


    def openAddUser(self):
        self.AddUser_window = QtWidgets.QMainWindow()
        self.AddUser_ui = Ui_usercreate()
        self.AddUser_ui.setupUi(self.AddUser_window)
        self.AddUser_window.show()


    def openEditUser(self):
        selected_row = self.tableusers.currentRow()
        if selected_row < 0:
            QMessageBox.warning(self.background, "Ошибка", "Выберите арендатора для редактирования")
        else:
            
            edit_user = QtWidgets.QDialog()
            ui = Ui_useredit()
            ui.setupUi(edit_user,selected_row)
        
        # Установка значений полей в окне редактирования
            ui.id.setText(self.tableusers.item(selected_row, 0).text())
            ui.name.setText(self.tableusers.item(selected_row, 1).text())
            ui.lastname.setText(self.tableusers.item(selected_row, 2).text())
            ui.login.setText(self.tableusers.item(selected_row, 3).text())
            ui.password.setText(self.tableusers.item(selected_row, 4).text())
            ui.post.setText(self.tableusers.item(selected_row, 5).text())
        
        # Установите значения для других полей в соответствии с их индексами столбцов

            edit_user.exec_()




    def retranslateUi(self, users):
        _translate = QtCore.QCoreApplication.translate
        users.setWindowTitle(_translate("users", "Справочник пользователей"))
        item = self.tableusers.horizontalHeaderItem(0)
        item.setText(_translate("users", "ID"))
        item = self.tableusers.horizontalHeaderItem(1)
        item.setText(_translate("users", "Имя"))
        item = self.tableusers.horizontalHeaderItem(2)
        item.setText(_translate("users", "Фамилия"))
        item = self.tableusers.horizontalHeaderItem(3)
        item.setText(_translate("users", "Логин"))
        item = self.tableusers.horizontalHeaderItem(4)
        item.setText(_translate("users", "Пароль"))
        item = self.tableusers.horizontalHeaderItem(5)
        item.setText(_translate("users", "Должность"))
        self.label.setText(_translate("users", "Список пользователей"))
        self.deletebutton.setText(_translate("users", "Удалить"))
        self.addbutton.setText(_translate("users", "Добавить"))
        self.updatebutton.setText(_translate("users", "Обновить"))
        self.editbutton.setText(_translate("users", "Редактировать"))


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    users = QtWidgets.QDialog()
    ui = Ui_users()
    ui.setupUi(users)
    users.show()
    sys.exit(app.exec_())
